entity Region {
	regionName String
}

entity Country {
	countryName String
}

// an ignored comment
/** not an ignored comment */
entity Location {
	streetAddress String,
	postalCode String,
	city String,
	stateProvince String
}

entity Department {
	departmentName String required
}

/**
 * Task entity.
 * @author The JHipster team.
 */
entity Task {
	title String,
    taskID String,
    taskName String,
    scaleID String,
    scaleName String,
    dataValue BigDecimal,
    n Long,
    standardError BigDecimal,
    lowerClBound BigDecimal,
    upperClBound BigDecimal,
    recommendSuppress String,
    notRelevant String,
    date ZonedDateTime,
    domainSource String,
	description String
}

/**
 * The Employee entity.
 */
entity Employee {
	/**
	* The firstname attribute.
	*/
    employeeId Long,
    playerType String,
	firstName String,
	lastName String,
	email String,
	phone String,
    badgeNumber String,
	startDate ZonedDateTime,
	previousSalary Long,
    currentSalary Long,
    goalSalary Long,
    pathGoal String,
    address String,
    city String,
    zip Long,
    state String,
    employeeAvatar ImageBlob
}

entity Job {
	jobTitle String,
	minSalary Long,
	maxSalary Long
}

entity JobHistory {
	startDate ZonedDateTime,
	endDate ZonedDateTime,
	language Language
}

entity Discipline {
	disciplineName String required,
    disciplineAvator ImageBlob,
    disciplineDescription String,
    disciplinePrice Long
}

entity Program {
	programName String required,
    programAvator ImageBlob,
	programDescription String,
    programPrice Long
}

entity Course {
	courseTitle String required,
    courseAvator ImageBlob,
    courseDescription String,
    coursePrice Long,
    courseLevel Level
}

entity Lesson {
	lessonTitle String required,
    lessonAvator ImageBlob,
	lessonDescription String,
    language Language
}

entity Resource {
	resourceName String,
    resourceAvator ImageBlob,
    resourceDescription String,
    resourceURL String,
    resourcePreviewImage String,
    resourceType ResourceType,
    weight Integer
}

enum Level {
	NOVICE, BEGINNER, INTERMEDIATE, ADVANCED, PROFESSIONAL
}

enum ResourceType {
	VIDEO, IMAGE, TUTORIAL, PAGE, PARTIAL, TOOL 
}

enum Language {
    ENGLISH, SPANISH, HUNGARIAN, GERMAN, FRENCH
}

relationship OneToOne {
	Country{region} to Region
}

relationship OneToOne {
	Location{country} to Country
}

relationship OneToOne {
	Department{location} to Location
}

relationship OneToMany {
	Discipline{resources} to Resource,
	Program{resources} to Resource,
    Course{resources} to Resource,
    Lesson{resources} to Resource,
    Employee{job} to Job,
	Department{employee} to Employee,
    Discipline{employee} to Employee
}

relationship ManyToMany {
	Discipline{programs} to Program{disciplines},
    Program{courses} to Course{programs},
	Course{lessons} to Lesson{courses},
	Job{task(title)} to Task{job}    
}

relationship ManyToOne {
	Employee{manager} to Employee
}

// defining multiple oneToOne relationships
relationship OneToOne {
	JobHistory{job} to Job,
	JobHistory{department} to Department,
	JobHistory{employee} to Employee
}

// Set pagination options
paginate Lesson, JobHistory, Employee with infinite-scroll
paginate Program, Course, Job with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Employee, Job
// Set an angular suffix
angularSuffix * with mySuffix
